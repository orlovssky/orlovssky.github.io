{"version":3,"sources":["webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VMenu/VMenu.ts"],"names":["name","functional","directives","ripple","props","disabled","type","default","value","indeterminate","indeterminateIcon","onIcon","offIcon","data","children","h","staticClass","center","icon","dark","light","classes","class","on","click","e","f","mixins","inset","Boolean","this","themeClasses","attrs","$listeners","$slots","action","dense","hideSelected","items","itemDisabled","String","Array","itemText","itemValue","noDataText","noFilter","searchInput","selectedItems","computed","map","item","getValue","Object","setTextColor","tile","role","undefined","mousedown","$createElement","VListItem","genTileContent","methods","VListItemAction","VSimpleCheckbox","color","inputValue","input","$emit","VDivider","text","end","getMaskedCharacters","start","genHighlight","middle","index","hasItem","getDisabled","id","_uid","activeClass","$scopedSlots","length","genAction","parent","scopedSlot","needsTile","innerHTML","genFilteredText","getText","VList","domProps","parsedItems","indexOf","slot","itemsLength","genTile","genHeader","genDivider","tabindex","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","baseMixins","ClickOutside","appendIcon","attach","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","menuProps","multiple","openOnClear","returnObject","smallChips","cachedItems","menuIsBooted","isMenuActive","lastItem","lazyValue","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","filterDuplicates","concat","isFocused","args","closeConditional","hasChips","scopeId","$vnode","context","computedOwns","$vuetify","lang","t","select","selectItem","scopedSlots","console","VSelectList","$_menuProps","computedItems","slice","menuCanShow","normalisedProps","split","acc","p","nudgeBottom","watch","window","getContent","onMenuActiveChange","immediate","$refs","contains","$el","uniqueValues","arr","val","internalValue","i","valueComparator","menu","isDisabled","VChip","close","small","onChipInput","key","JSON","last","selections","prefix","genAffix","suffix","VInput","mergeData","readonly","autocomplete","keypress","onKeyPress","attrs$","render","slots","slotName","listData","VMenu","offsetY","ref","genSelection","selection","selected","setValue","isAppendInner","KEYBOARD_LOOKUP_THRESHOLD","now","performance","allItems","findIndex","setTimeout","setMenuIndex","keyCode","activateMenu","onUpDown","onEscDown","onTabDown","onSpaceDown","getMenuIndex","hasMouseDown","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","findExistingIndex","listIndex","values","v","oldValue","appendInner","active","chipGroup","closeIcon","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","breakingProps","original","$attrs","hasOwnProperty","replacement","left","right","size","hasClose","setBackgroundColor","isInMenu","theme","Resize","auto","Number","offsetX","openOnHover","origin","transition","calculatedTopAuto","defaultOffset","hasJustFocused","resizeTimeout","tiles","menuWidth","Math","dimensions","content","parseFloat","calcXOverflow","calcLeft","height","minWidth","activator","width","pageWidth","calculatedMaxWidth","isNaN","parseInt","top","calcYOverflow","find","maxWidth","transformOrigin","zIndex","activeZIndex","next","prev","classList","remove","maxScrollTop","tileDistanceFromMenuTop","firstTileOffsetTop","computedTop","target","isActive","attributes","listeners","isContentActive","include","options","menuable__content__active","contentClass","style","keydown","onKeyDown","querySelectorAll","nextTile","prevTile","changeListIndex","clearTimeout","arg","onResize","showLazyContent","root"],"mappings":"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","file":"js/chunk-62ff69f6.9c7c2902.js","sourcesContent":["import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data }): VNode {\n    const children = []\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    const classes = {\n      'v-simple-checkbox': true,\n      'v-simple-checkbox--disabled': props.disabled,\n    }\n\n    return h('div', {\n      ...data,\n      class: classes,\n      on: {\n        click: (e: MouseEvent) => {\n          e.stopPropagation()\n\n          if (data.on && data.on.input && !props.disabled) {\n            wrapInArray(data.on.input).forEach(f => f(!props.value))\n          }\n        },\n      },\n    }, children)\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { SelectItemKey } from 'types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: '', middle: text, end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { SelectItemKey } from 'types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    },\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.getText(this.selectedItems[0]) || '').toString().length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: this.blur,\n        args: {\n          closeConditional: this.closeConditional,\n        },\n      } as VNodeDirective] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    menuIsBooted () {\n      window.setTimeout(() => {\n        if (this.getContent() && this.getContent().addEventListener) {\n          this.getContent().addEventListener('scroll', this.onScroll, false)\n        }\n      })\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n\n      if (!val) return\n\n      this.menuIsBooted = true\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        this.disabled ||\n        this.readonly ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : undefined)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.disabled ||\n        this.readonly ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (isDisabled) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.disabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.readonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined, offsetY: true },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: this.disabled || this.readonly,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (this.isDisabled) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        this.readonly ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        !this.isDisabled\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        // If user is clicking in the container\n        // and field is enclosed, activate it\n        } else if (this.isEnclosed) {\n          this.isMenuActive = true\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem >= this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n        keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile()\n        menu.activeTile && menu.activeTile.click()\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      const oldValue = this.internalValue\n      this.internalValue = value\n      value !== oldValue && this.$emit('change', value)\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: () => { this.isActive = false },\n          args: {\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        } as any)\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n"],"sourceRoot":""}