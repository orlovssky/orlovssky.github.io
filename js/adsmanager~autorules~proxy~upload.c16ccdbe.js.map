{"version":3,"sources":["webpack:///../../../src/components/VRadioGroup/VRadioGroup.ts","webpack:///../../../src/components/VRadioGroup/VRadio.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///../../../src/components/VTreeview/VTreeview.ts"],"names":["baseMixins","name","radioGroup","this","props","column","type","default","height","Number","row","value","computed","methods","$createElement","staticClass","attrs","id","role","computedId","render","label","onClick","inheritAttrs","disabled","offIcon","onIcon","readonly","data","isFocused","groupClasses","isActive","hasLabel","_uid","on","click","e","for","color","focused","hasState","setTextColor","dense","genInput","attrs$","genRipple","isDisabled","onKeydown","class","classes","h","defaultMenuProps","offsetY","offsetOverflow","transition","allowOverflow","autoSelectFirst","filter","item","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","undefined","lazySearch","selectedIndex","selectedItems","map","getValue","hideSelected","filteredItems","some","hasItem","length","selectedItem","String","getText","internalSearch","allItems","searchIsDirty","multiple","hasDisplayedItems","find","i","valueComparator","items","watch","internalValue","document","$refs","input","val","oldVal","activateMenu","menu","keyCode","index","currentItem","getDisabled","newIndex","autocomplete","domProps","slot","hasSlot","isAppendInner","target","setSearch","selectedValues","indexOf","currentItemText","event","mixins","VTreeviewNodeProps","activatable","activeClass","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","loadChildren","loadingIcon","openOnClick","rounded","selectable","selectedColor","shaped","Boolean","VTreeviewNode","inject","treeview","level","hasLoaded","isIndeterminate","isLoading","isOpen","isSelected","leaf","selected","indeterminate","active","open","children","Promise","resolve","$scopedSlots","prepend","append","VIcon","genLevel","key","scopedSlots","isExcluded","text","search","match","filterTreeItems","excluded","hoverable","multipleActive","openAll","returnObject","selectionType","validator","v","includes","activeCache","nodes","openCache","selectedCache","Set","oldKeys","Object","k","newKeys","getKeys","diff","oldSelectedCache","emitSelected","deep","updateSelected","updateActive","$slots","console","updateOpen","keys","parent","oldNode","hasOwnProperty","vnode","node","c","calculateState","add","counts","state","old","updateFn","emitFn","descendants","getDescendants","parents","delete","changed","descendant","getParents","isParent","excludedItems","has","themeClasses"],"mappings":"gNAAA,wEAeA,MAAMA,EAAa,eAAO,EAAD,YAAzB,QAOe,OAAAA,EAAA,OAAkB,CAC/BC,KAD+B,gBAG/B,UACE,MAAO,CACLC,WAAYC,OAIhBC,MAAO,CACLC,OAAQ,CACNC,KADM,QAENC,SAAS,GAEXC,OAAQ,CACNF,KAAM,CAACG,OADD,QAENF,QAAS,QAEXN,KATK,OAULS,IAVK,QAcLC,MAAO,MAGTC,SAAU,CACR,UACE,MAAO,IACF,qCADE,MAEL,oDAFK,EAGL,+BAAgCT,KAAKE,SAAWF,KAH3C,IAIL,4BAA6BA,KAAKO,OAKxCG,QAAS,CACP,iBACE,OAAOV,KAAKW,eAAe,MAAO,CAChCC,YADgC,8BAEhCC,MAAO,CACLC,GAAId,KADC,GAELe,KAFK,aAGL,kBAAmBf,KAAKgB,aAEzB,2CAPH,QASF,eACE,MAAMC,EAAS,yCAAf,MAIA,cAFOA,EAAA,QAAP,MAEA,GAEF,WACE,MAAMC,EAAQ,qCAAd,MAEA,UAEAA,EAAA,cAAwBlB,KALlB,kBAOCkB,EAAA,WAAP,IACAA,EAAA,aAEA,GAPmB,MASrBC,QAAS,uBAA8BA,Y,oCCzF3C,kJAwBA,MAAMtB,EAAa,eAAO,EAAD,mBAIvB,eAJuB,cAAzB,QAae,OAAAA,EAAA,gBAAoC,CACjDC,KADiD,UAGjDsB,cAHiD,EAKjDnB,MAAO,CACLoB,SADK,QAELP,GAFK,OAGLI,MAHK,OAILpB,KAJK,OAKLwB,QAAS,CACPnB,KADO,OAEPC,QAAS,aAEXmB,OAAQ,CACNpB,KADM,OAENC,QAAS,YAEXoB,SAbK,QAcLhB,MAAO,CACLJ,QAAS,OAIbqB,KAAM,KAAM,CACVC,WAAW,IAGbjB,SAAU,CACR,UACE,MAAO,CACL,uBAAwBT,KADnB,WAEL,sBAAuBA,KAFlB,aAGFA,KAHE,gBAIFA,KAAK2B,eAGZ,gBACE,OAAO,2CAAP,OAEF,eACE,OAAO3B,KAAK4B,SACR5B,KADG,OAEHA,KAFJ,SAIF,aACE,OAAO,wCAAP,OAEF6B,SAAU,wBApBF,SAqBR,WACE,OAAQ7B,KAAKD,YAAN,IAAP,UAEF,aACE,OAAOC,KAAKqB,aAAerB,KAAKD,YAAN,IAA1B,UAEF,aACE,OAAOC,KAAKwB,aAAexB,KAAKD,YAAN,IAA1B,UAEF,eACE,OAAIC,KAAKF,OAASE,KAAlB,WACSA,KAAP,KAGKA,KAAKD,WAAWD,MAAQ,SAASE,KAAKD,WAAW+B,MAE1D,cACE,OAAO,yCAAP,OAEF,kBACE,OAAQ9B,KAAKD,YAAN,qBAA2CC,KAAlD,gBAIJU,QAAS,CACP,SAAQ,GAIN,OAAO,kDAAP,IAEF,WACE,OAAKV,KAAL,SAEOA,KAAKW,eAAe,EAApB,KAA4B,CACjCoB,GAAI,CACFC,MAAQC,IAINA,EAAA,iBAEAjC,KAAA,aAGJa,MAAO,CACLqB,IAAKlC,KAAKgB,YAEZf,MAAO,CACLkC,MAAOnC,KADF,gBAELoC,QAASpC,KAAKqC,WAEf,eAAQrC,KAAR,UAA0BA,KAlB7B,OAF2B,MAsB7B,WACE,OAAOA,KAAKW,eAAe,MAAO,CAChCC,YAAa,sCACZ,CACDZ,KAAKW,eAAe,EAApB,KAA2BX,KAAKsC,aAAatC,KAAlB,gBAAwC,CACjEC,MAAO,CACLsC,MAAOvC,KAAKD,YAAcC,KAAKD,WAAWwC,SAE1CvC,KALH,cAMDA,KAAKwC,SAAS,CACZ1C,KAAME,KADM,aAEZQ,MAAOR,KAFK,SAGTA,KAAKyC,SAEVzC,KAAK0C,UAAU1C,KAAKsC,aAAatC,KAbnC,iBAgBF,QAAO,GACLA,KAAA,aACAA,KAAA,kBAEF,OAAM,GACJA,KAAA,aACAA,KAAA,iBAEF,WACMA,KAAK2C,YAAc3C,KAAnB,YAAsCA,KAA1C,UAEAA,KAAA,UAEF4C,UAAW,QAGb,OAAM,GACJ,MAAMnB,EAAO,CACXb,YADW,UAEXiC,MAAO7C,KAAK8C,SAGd,OAAOC,EAAE,MAAOtB,EAAM,CACpBzB,KADoB,WAEpBA,KAFF,iB,kCCnLJ,8DAcA,MAAMgD,EAAmB,WAEvBC,SAFuB,EAGvBC,gBAHuB,EAIvBC,YAAY,GAIC,qBAAe,CAC5BrD,KAD4B,iBAG5BG,MAAO,CACLmD,cAAe,CACbjD,KADa,QAEbC,SAAS,GAEXiD,gBAAiB,CACflD,KADe,QAEfC,SAAS,GAEXkD,OAAQ,CACNnD,KADM,SAENC,QAAS,CAACmD,EAAD,MACAC,EAAA,4BAAqCC,EAArC,sBAAP,GAGJC,WAfK,QAgBLC,UAAW,CACTxD,KAAM,+BADG,KAETC,QAAS,IAAM4C,GAEjBY,SApBK,QAqBLC,YAAa,CACX1D,KADW,OAEXC,aAAS0D,IAIb,OACE,MAAO,CACLC,WAAY/D,KAAK6D,cAIrBpD,SAAU,CACR,UACE,MAAO,IACF,qCADE,MAEL,kBAFK,EAGL,qCAAsCT,KAAKgE,eAAiB,IAGhE,gBACE,OAAOhE,KAAP,eAEF,iBACE,OAAOA,KAAKiE,cAAcC,IAAIX,GAAQvD,KAAKmE,SAA3C,KAEF,oBACE,OAAOnE,KAAKoE,aACRpE,KAAKqE,cAAcC,KAAKf,IAASvD,KAAKuE,QADnC,IAEHvE,KAAKqE,cAAcG,OAFvB,GAIF,eACE,aAAIxE,KAAKyE,aAA6B,EAE/BC,OAAO1E,KAAK2E,QAAQ3E,KAApB,eAAP,QAEF,gBACE,OAAKA,KAAD,aAAqBA,KAArB,UAAJ,MAA0CA,KAAK4E,eAA+B5E,KAAP,SAEhEA,KAAK6E,SAASvB,OAAOC,GAAQvD,KAAKsD,OAAOC,EAAMmB,OAAO1E,KAAzB,gBAA+C0E,OAAO1E,KAAK2E,QAA/F,OAEFC,eAAgB,CACd,MACE,OAAO5E,KAAP,YAEF,IAAG,GACDA,KAAA,aAEAA,KAAA,iCAGJ,oBACE,UAEF,UACE,OAAOA,KAAK8E,eAAiB9E,KAAKiE,cAAcO,OAAhD,GAEF,cACE,OACExE,KAAK+E,UACL/E,KAFK,eAILA,KAAK8E,eACL9E,KAAK4E,iBAAmB5E,KAAK2E,QAAQ3E,KALvC,eAQF,cACE,QAAKA,KAAL,YAEOA,KAAKgF,oBAAsBhF,KAAlC,aAEF,cACE,MAAMC,EAAQ,yCAAd,MAEA,OADCA,EAAA,cAA6B,4BAA4BA,EAAA,cAA8B,KAAvF,OACM,SAEFA,IAGP,gBACE,OAA8B,MAAvBD,KAAK4E,gBAAZ,KACE5E,KAAK4E,gBAET,eACE,OAAI5E,KAAJ,SAA0B,KAEnBA,KAAKiE,cAAcgB,KAAKC,GACtBlF,KAAKmF,gBAAgBnF,KAAKmE,SAA1B,GAAuCnE,KAAKmE,SAASnE,KAA5D,kBAGJ,WACE,MAAMyB,EAAO,sCAAb,MAaA,OAXAA,EAAA,MAAa,IACRA,EADQ,MAEX2D,MAAOpF,KAFI,iBAGX4D,SACE5D,KAAK4D,WACJ5D,KADD,cAECA,KAAKqE,cANG,OAQXR,YAAa7D,KAAK4E,gBAGpB,IAIJS,MAAO,CACLhB,cADK,yBAELiB,cAFK,YAGL,UAAS,GACP,GACEC,SAAA,wBAAkCvF,KAAlC,QACAA,KAAA,aAAoBA,KAAKwF,MAAMC,MAA/B,WAEAF,SAAA,2BAAqCvF,KAArC,QACAA,KAAA,eAGJ,aAAY,IACN0F,GAAQ1F,KAAZ,UAEAA,KAAA,oBAEF,MAAK,KAOC2F,GAAUA,EAAZ,SACA3F,KADA,aAEAA,KAFA,WAGCA,KAHD,eAIA0F,EALF,QAME1F,KAAK4F,gBAET,YAAW,GACT5F,KAAA,cAEF4E,eAlCK,0BAmCLpB,SAAU,cAGZ,UACExD,KAAA,aAGFU,QAAS,CACP,uBAAsB,KAGhBgF,IAAJ,IAEA1F,KAAA,iBAEAA,KAAA,UAAe,KAEVA,KAAD,iBACC,IAAA0F,EAAA,QACE1F,KAHL,mBAMAA,KAAA,sBACAA,KAAA,qBAGJ,0BACEA,KAAA,wBAEF,uBAEEA,KAAA,cAAqBA,KAAKwF,MAA1B,MAAwCxF,KAAKwF,MAAMK,KAAnD,oBAEF,oBAAmB,GAGb7F,KAAJ,gBAEIA,KAAK+E,UAAYe,IAAY,OAAjC,MACE,IAAI9F,KAAKgE,cACPhE,KAAA,cAAqBA,KAAKiE,cAAcO,OAAxC,EAEAxE,KAAA,gBAEOA,KAAK+E,UAAYe,IAAY,OAAjC,MACD9F,KAAKgE,eAAiBhE,KAAKiE,cAAcO,OAA7C,EACExE,KAAA,iBAEAA,KAAA,gBAEO8F,IAAY,OAAZ,WAAkCA,IAAY,OAAlD,QACL9F,KAAA,sBAGJ,oBACE,GAAIA,KAAJ,SAAmB,OAEnB,MAAM+F,EAAQ/F,KAAKiE,cAAcO,OAAjC,EAEA,IAAI,IAAAxE,KAAKgE,eAAT,IAAiC+B,EAE/B,YADA/F,KAAA,iBAIF,MAAMgG,EAAchG,KAAKiE,cAAcjE,KAAvC,eAEA,GAAIA,KAAKiG,YAAT,GAAmC,OAEnC,MAAMC,EAAWlG,KAAKgE,gBAAkB+B,EACpC/F,KAAKgE,cADQ,EAEbhE,KAAKiE,cAAcjE,KAAKgE,cAAxB,GACEhE,KADF,eAFJ,GAMA,IAAIkG,EACFlG,KAAA,SAAcA,KAAK+E,SAAW,QAA9B,GAEA/E,KAAA,cAGFA,KAAA,iBAEF,oBACEA,KAAA,sBAEA,qDAEF,WACE,MAAMyF,EAAQ,qCAAd,MAUA,OARAA,EAAA,KAAa,eAAUA,EAAD,KAAc,CAClC5E,MAAO,CACL,wBAAyB,eAAqBb,KAAKwF,MAAN,KADxC,iBAELW,aAAc,eAAqBV,EAAD,kCAEpCW,SAAU,CAAE5F,MAAOR,KAAK4E,kBAG1B,GAEF,eACE,MAAMyB,EAAO,yCAAb,MAIA,OAFAA,EAAA,2BAEA,GAEF,gBACE,OAAOrG,KAAKsG,SAAWtG,KAAhB,SACH,0CADGA,MAAP,IAIF,QAAO,GACDA,KAAJ,aAEAA,KAAA,iBACKA,KAAKgE,eADV,EAEIhE,KAFJ,UAIKA,KAAKuG,cAActE,EAAxB,SAAmCjC,KAAK4F,iBAE1C,QAAO,GACL,GACE5F,KAAKgE,eAAL,IACC/B,EAFH,OAGE,OAEF,MAAMuE,EAASvE,EAAf,OACMzB,EAAQgG,EAPC,MAUXA,EAAJ,OAAkBxG,KAAK4F,eAEvB5F,KAAA,iBACAA,KAAA,SAAgBwG,EAAA,UAAmBA,EAAA,SAAnC,UAEF,UAAS,GACP,MAAMV,EAAU7D,EAAhB,QAEA,2CAHyB,GASzBjC,KAAA,wBAEF,YAAW,KACX,UAAS,GACP,8CACAA,KAAA,cAEF,SAAQ,GAENiC,EAFgB,iBAOhBjC,KAAA,gBAEF,WAAU,GACR,+CACAA,KAAA,aAEF,mBACE,6CADc,MAKTA,KAAL,WAAqBA,KAAKyG,aAE5B,YAGEzG,KAAA,UAAe,KAEVA,KAAD,UACCA,KADD,gBAECA,KAHH,eAKEA,KAAA,gBACGA,KAAKiE,cAAN,QACAjE,KADA,UAEAA,KAHoB,aAMlBA,KAAK2E,QAAQ3E,KANjB,kBAUN,cACOA,KAAD,eACDA,KADH,iBAIKA,KAAKmF,gBACRnF,KADG,eAEHA,KAAKmE,SAASnE,KAFhB,iBAIEA,KAAA,cAGJ,QAAO,GACL,OAAOA,KAAK0G,eAAeC,QAAQ3G,KAAKmE,SAAjC,KAAP,GAEF,OAAM,GACJ,QAAInE,KAAKgE,cAAsB,OAE/B,MAAMgC,EAAchG,KAAKiE,cAAcjE,KAAvC,eACM4G,EAAkB5G,KAAK2E,QAA7B,GACAkC,EAAA,sCACAA,EAAA,oEACAA,EAAA,sB,wHChYN,MAAMhH,EAAa,OAAAiH,EAAA,MAAO,EAAD,KAEvB,eAFF,aASaC,EAAqB,CAChCC,YADgC,QAEhCC,YAAa,CACX9G,KADW,OAEXC,QAAS,2BAEX+B,MAAO,CACLhC,KADK,OAELC,QAAS,WAEX8G,WAAY,CACV/G,KADU,OAEVC,QAAS,aAEX+G,kBAAmB,CACjBhH,KADiB,OAEjBC,QAAS,0BAEXgH,aAAc,CACZjH,KADY,OAEZC,QAAS,YAEXiH,aAAc,CACZlH,KADY,OAEZC,QAAS,YAEXkH,QAAS,CACPnH,KADO,OAEPC,QAAS,MAEXoD,SAAU,CACRrD,KADQ,OAERC,QAAS,QAEXmH,aAlCgC,SAmChCC,YAAa,CACXrH,KADW,OAEXC,QAAS,YAEXkB,QAAS,CACPnB,KADO,OAEPC,QAAS,gBAEXmB,OAAQ,CACNpB,KADM,OAENC,QAAS,eAEXqH,YA/CgC,QAgDhCC,QAhDgC,QAiDhCC,WAjDgC,QAkDhCC,cAAe,CACbzH,KADa,OAEbC,QAAS,UAEXyH,OAtDgC,QAuDhC1E,WAAY2E,SAIRC,EAAgBlI,EAAA,gBAAoC,CACxDC,KADwD,kBAGxDkI,OAAQ,CACNC,SAAU,CACR7H,QAAS,OAIbH,MAAO,CACLiI,MADK,OAEL3E,KAAM,CACJpD,KADI,OAEJC,QAAS,IAAM,SAEd2G,GAGLtF,KAAM,KAAM,CACV0G,WADW,EAEXvG,UAFW,EAGXwG,iBAHW,EAIXC,WAJW,EAKXC,QALW,EAMXC,YAAY,IAGd9H,SAAU,CACR,WACE,OAAO,eAAqBT,KAAD,KAAYA,KAAvC,eAEF,MACE,OAAO,eAAqBA,KAAD,KAAYA,KAAvC,UAEF,WACE,OAAO,eAAqBA,KAAD,KAAYA,KAAvC,eAEF,OACE,OAAO,eAAqBA,KAAD,KAAYA,KAAvC,WAEF,cACE,MAAO,CACLuD,KAAMvD,KADD,KAELwI,MAAOxI,KAFF,SAGLyI,SAAUzI,KAHL,WAIL0I,cAAe1I,KAJV,gBAKL2I,OAAQ3I,KALH,SAML4I,KAAM5I,KAAKsI,SAGf,eACE,OAAItI,KAAJ,gBAAiCA,KAAjC,kBACSA,KAAJ,WAA4BA,KAA5B,OACOA,KAAP,SAEP,cACE,QAASA,KAAF,aAAsBA,KAAK6I,SAAP,UAA4B7I,KAAvD,gBAIJ,UACEA,KAAA,kBAAAA,OAGF,gBACEA,KAAA,oBAAAA,OAGFU,QAAS,CACP,gBACE,OAAO,IAAIoI,QAAcC,IAGvB,IAAK/I,KAAD,UAAkBA,KAAK6I,SAAvB,SAA2C7I,KAA3C,cAAgEA,KAApE,UAAoF,OAAO+I,IAE3F/I,KAAA,aACA+I,EAAQ/I,KAAKuH,aAAavH,KAA1B,SANK,KAOC,KACNA,KAAA,aACAA,KAAA,gBAGJ,OACEA,KAAA,QAAeA,KAAf,OACAA,KAAA,oBAAyBA,KAAzB,IAAmCA,KAAnC,QACAA,KAAA,qBAEF,WACE,MAAM6I,EAAN,GAKA,OAHI7I,KAAKgJ,aAAT,MAA6BH,EAAA,KAAc7I,KAAKgJ,aAAa9H,MAAMlB,KAAnE,cACK6I,EAAA,KAAc7I,KAAd,MAEEA,KAAKW,eAAe,MAAO,CAChC0F,KADgC,QAEhCzF,YAAa,0BAFf,IAKF,iBACE,OAAKZ,KAAKgJ,aAAV,QAEOhJ,KAAKW,eAAe,MAAO,CAChCC,YAAa,4BACZZ,KAAKgJ,aAAaC,QAAQjJ,KAF7B,cAFuC,MAMzC,gBACE,OAAKA,KAAKgJ,aAAV,OAEOhJ,KAAKW,eAAe,MAAO,CAChCC,YAAa,2BACZZ,KAAKgJ,aAAaE,OAAOlJ,KAF5B,cAFsC,MAMxC,aACE,MAAM6I,EAAW,CACf7I,KADe,iBAEfA,KAFe,WAGfA,KAHF,iBAMA,OAAOA,KAAKW,eAAe,MAAO,CAChCC,YAAa,4BADf,IAIF,YACE,OAAOZ,KAAKW,eAAewI,EAApB,KAA2B,CAChCvI,YADgC,0BAEhCiC,MAAO,CACL,gCAAiC7C,KAD5B,OAEL,mCAAoCA,KAAKqI,WAE3ChC,KANgC,UAOhCtE,GAAI,CACFC,MAAQC,IACFjC,KAAJ,WAEAiC,EAAA,kBAEIjC,KAAJ,WAEAA,KAAA,qBAA0B,IAAMA,KAAhC,YAGH,CAACA,KAAKqI,UAAYrI,KAAjB,YAAoCA,KAlBxC,cAoBF,cACE,OAAOA,KAAKW,eAAewI,EAApB,KAA2B,CAChCvI,YADgC,4BAEhCX,MAAO,CACLkC,MAAOnC,KAAKuI,WAAavI,KAAlB,mBAAuC8D,GAEhD/B,GAAI,CACFC,MAAQC,IACFjC,KAAJ,WAEAiC,EAAA,kBAEIjC,KAAJ,WAEAA,KAAA,qBAA0B,KAExBA,KAAA,UAAe,KACbA,KAAA,YAAmBA,KAAnB,WACAA,KAAA,mBAEAA,KAAA,wBAA6BA,KAA7B,IAAuCA,KAAvC,YACAA,KAAA,gCAKP,CAACA,KAzBJ,gBA2BF,SAAQ,GACN,OAAO,sBAAuB,IAAMA,KAAKW,eAAe,MAAO,CAC7DC,YAAa,6BAGjB,UACE,MAAMiI,EAAW,CAAC7I,KAAlB,cAYA,OAVIA,KAAJ,YAAqB6I,EAAA,QAAiB7I,KAAjB,eAEjBA,KAAJ,YACE6I,EAAA,QAAiB7I,KAAjB,aAEA6I,EAAA,WAAoB7I,KAAKoJ,SAAzB,IAGFP,EAAA,WAAoB7I,KAAKoJ,SAASpJ,KAAlC,QAEOA,KAAKW,eAAe,MAAOX,KAAKsC,aAAatC,KAAK4B,UAAY5B,KAAnC,MAA+C,CAC/EY,YAD+E,wBAE/EiC,MAAO,CACL,CAAC7C,KAAD,aAAoBA,KAAK4B,UAE3BG,GAAI,CACFC,MAAO,KACDhC,KAAJ,WAEIA,KAAKyH,aAAezH,KAAxB,YACEA,KAAA,OACSA,KAAJ,cACLA,KAAA,UAAiBA,KAAjB,SACAA,KAAA,sBAA2BA,KAA3B,IAAqCA,KAArC,UACAA,KAAA,4BAdR,IAoBF,SAAQ,GACN,OAAOA,KAAKW,eAAeoH,EAAe,CACxCsB,IAAK,eAAqB9F,EAAMvD,KADQ,SAExCC,MAAO,CACL+G,YAAahH,KADR,YAELiH,YAAajH,KAFR,mBAIL2H,WAAY3H,KAJP,WAKL4H,cAAe5H,KALV,cAMLmC,MAAOnC,KANF,MAOLkH,WAAYlH,KAPP,WAQLmH,kBAAmBnH,KARd,kBASLsB,QAAStB,KATJ,QAULuB,OAAQvB,KAVH,OAWLwH,YAAaxH,KAXR,YAYLsH,QAAStH,KAZJ,QAaLwD,SAAUxD,KAbL,SAcLqH,aAAcrH,KAdT,aAeLoH,aAAcpH,KAfT,aAgBLuH,aAAcvH,KAhBT,aAiBLmD,WAAYnD,KAjBP,WAkBLyH,YAAazH,KAlBR,YAmBL0H,QAAS1H,KAnBJ,QAoBL6H,OAAQ7H,KApBH,OAqBLkI,MAAOlI,KAAKkI,MAAQ,GAEtBoB,YAAatJ,KAAKgJ,gBAGtB,qBACE,IAAKhJ,KAAD,SAAiBA,KAArB,SAAoC,OAAO,KAE3C,MAAM6I,EAAW,CAAC7I,KAAK6I,SAAS3E,IAAIlE,KAApC,WAEA,OAAOA,KAAKW,eAAe,MAAO,CAChCC,YAAa,6BADf,IAIF,gBACE,OAAOZ,KAAKW,eAAe,EAApB,KAAuC,CAACX,KAA/C,yBAIJ,OAAM,GACJ,MAAM6I,EAAW,CAAC7I,KAAlB,WAKA,OAHIA,KAAJ,WAAqB6I,EAAA,KAAc7I,KAAnC,iBACK6I,EAAA,KAAc7I,KAAd,sBAEE+C,EAAE,MAAO,CACdnC,YADc,kBAEdiC,MAAO,CACL,yBAA0B7C,KADrB,YAEL,yBAA0BA,KAFrB,YAGL,4BAA6BA,KAHxB,SAIL,2BAA4BA,KAJvB,QAKL,0BAA2BA,KALtB,OAML,4BAA6BA,KANxB,WAOL,4BAA6BA,KAAKiI,SAASsB,WAAWvJ,KAAzB,MAE/Ba,MAAO,CACL,gBAAiB6D,OAAO1E,KAAD,UAZ3B,MAkBJ,Q,wBCxWM,kBACJ,MAAMwJ,EAAO,eAAqBjG,EAAlC,GAEA,OAAOiG,EAAA,4BAAiCC,EAAjC,sBAAP,EAGI,0BASJ,GAAInG,EAAOC,EAAMkG,EAAjB,GACE,SAGF,MAAMZ,EAAW,eAAqBtF,EAAtC,GAEA,KAAc,CACZ,IAAImG,GAAJ,EACA,IAAK,IAAIxE,EAAT,EAAgBA,EAAI2D,EAApB,OAAqC3D,IAC/ByE,EAAgBrG,EAAQuF,EAAT,WAAnB,KACEa,GAAA,GAIJ,KAAW,OAAO,EAKpB,OAFAE,EAAA,IAAa,eAAqBrG,EAAlC,KAEA,ECMa,cAAAuD,EAAA,MACb,eADmB,YAEnB,QAFa,OAIN,CACPhH,KADO,aAGP,UACE,MAAO,CAAEmI,SAAUjI,OAGrBC,MAAO,CACL0I,OAAQ,CACNxI,KADM,MAENC,QAAS,IAAO,IAElBmC,MALK,QAMLe,OANK,SAOLuG,UAPK,QAQLzE,MAAO,CACLjF,KADK,MAELC,QAAS,IAAO,IAElB0J,eAZK,QAaLlB,KAAM,CACJzI,KADI,MAEJC,QAAS,IAAO,IAElB2J,QAjBK,QAkBLC,aAAc,CACZ7J,KADY,QAEZC,SAAS,GAEXqJ,OAtBK,OAuBLQ,cAAe,CACb9J,KADa,OAEbC,QAFa,OAGb8J,UAAYC,GAAc,CAAC,OAAQ,eAAeC,SAASD,IAE7D3J,MAAO,CACLL,KADK,MAELC,QAAS,IAAO,OAEf2G,GAGLtF,KAAM,KAAM,CACVyG,OADW,EAEXmC,YAAa,IAFF,IAGXC,MAHW,GAIXC,UAAW,IAJA,IAKXC,cAAe,IAAIC,MAGrBhK,SAAU,CACR,gBACE,MAAMmJ,EAAW,IAAjB,IAEA,IAAK5J,KAAL,OAAkB,OAAO4J,EAEzB,IAAK,IAAI1E,EAAT,EAAgBA,EAAIlF,KAAKoF,MAAzB,OAAuCF,IACrCyE,EACE3J,KAAKsD,QADQ,EAEbtD,KAAKoF,MAFQ,GAGbpF,KAHa,OAIbA,KAJa,QAKbA,KALa,SAMbA,KANa,aAAf,GAWF,WAIJqF,MAAO,CACLD,MAAO,CACL,UACE,MAAMsF,EAAUC,OAAA,KAAY3K,KAAZ,WAA4B4K,GAAK,eAAqB5K,KAAKsK,MAAMM,GAAZ,KAAqB5K,KAA1F,UACM6K,EAAU7K,KAAK8K,QAAQ9K,KAA7B,OACM+K,EAAO,eAAUF,EAHlB,GAML,IAAKE,EAAD,QAAgBF,EAAA,OAAiBH,EAArC,OANK,OASLK,EAAA,QAAaH,UAAY5K,KAAKsK,MAA9B,IAEA,MAAMU,EAAmB,IAAIhL,KAA7B,eACAA,KAAA,cAAqB,IAArB,IACAA,KAAA,YAAmB,IAAnB,IACAA,KAAA,UAAiB,IAAjB,IACAA,KAAA,UAAeA,KAfV,OAqBA,eAAUgL,EAAkB,IAAIhL,KAArC,iBAA2DA,KAAKiL,gBAElEC,MAAM,GAER,OAAM,GACJlL,KAAA,yBAAmCA,KAAnC,YAAqDA,KAArD,aAAwEA,KAAxE,aAEF,MAAK,GACHA,KAAA,yBAAmCA,KAAnC,cAAuDA,KAAvD,eAA4EA,KAA5E,eAEF,KAAI,GACFA,KAAA,yBAAmCA,KAAnC,UAAmDA,KAAnD,WAAoEA,KAApE,YAIJ,UACEA,KAAA,UAAeA,KAAf,OACAA,KAAA,cAAmBqJ,GAAOrJ,KAAKmL,eAAenL,KAAKgK,aAAe,eAAqBX,EAAKrJ,KAA9C,SAApB,GAA1B,IACAA,KAAA,eAAoBqJ,GAAOrJ,KAAKoL,aAAapL,KAAKgK,aAAe,eAAqBX,EAAKrJ,KAA9C,SAAlB,GAA3B,KAGF,WAEMA,KAAKqL,OAAOpC,SAAWjJ,KAAKqL,OAAhC,SACE,OAAAC,EAAA,MAAY,8DAAZ,MAGEtL,KAAJ,QACEA,KAAA,eAEAA,KAAA,aAAkBqJ,GAAOrJ,KAAKuL,WAAWvL,KAAKgK,aAAe,eAAqBX,EAAKrJ,KAA9C,SAAhB,GAAzB,IACAA,KAAA,aAIJU,QAAS,CAEP,UAAS,GACPiK,OAAA,KAAY3K,KAAZ,eAAgCqJ,GAAOrJ,KAAKuL,WAAW,eAAqBvL,KAAKsK,MAAMjB,GAAZ,KAAuBrJ,KAA3D,SAAvC,IACAA,KAAA,YAEF,QAAO,EAAgBwL,EAAhB,IACL,IAAK,IAAItG,EAAT,EAAgBA,EAAIE,EAApB,OAAkCF,IAAK,CACrC,MAAMmE,EAAM,eAAqBjE,EAAD,GAAWpF,KAA3C,SACAwL,EAAA,KAAAnC,GACA,MAAMR,EAAW,eAAqBzD,EAAD,GAAWpF,KAAhD,cACA,GACEwL,EAAA,QAAaxL,KAAK8K,QAAlB,IAIJ,UAEF,UAAS,EAAgBW,EAAhB,MACP,IAAK,IAAIvG,EAAT,EAAgBA,EAAIE,EAApB,OAAkCF,IAAK,CACrC,MAAM3B,EAAO6B,EAAb,GACMiE,EAAM,eAAqB9F,EAAMvD,KAAvC,SACM6I,EAAW,eAAqBtF,EAAMvD,KAAP,aAArC,IACM0L,EAAU1L,KAAKsK,MAAMqB,eAAetC,GAAOrJ,KAAKsK,MAAtC,GAAmD,CACjE/B,YADiE,EAC9CH,iBAD8C,EACtBxG,UADsB,EACL0G,QADK,EACUsD,MAAO,MAG9EC,EAAY,CAChBD,MAAOF,EADS,eAGhB7C,SAAUA,EAAA,IAAciD,GAAW,eAAqBA,EAAG9L,KAH3C,UAIhBuD,QAGFvD,KAAA,YAfqC,IAkBhCA,KAAKsK,MAAMqB,eAAZ,WAAmCF,GAAmBzL,KAAKsK,MAAMqB,eAArE,GACEE,EAAA,WAAkB7L,KAAKsK,MAAMmB,GAA7B,YAEAI,EAAA,WAAkBH,EAAlB,WACAG,EAAA,gBAAuBH,EAAvB,iBAGFG,EAAA,SAAgBH,EAAhB,SACAG,EAAA,OAAcH,EAAd,OAEA1L,KAAA,SAAmB6I,EAAD,OAA0B7I,KAAK+L,eAAeF,EAAM7L,KA5BjC,OA4BnB,GAGdA,KAAKsK,MAAMjB,GAAKd,YAAsC,gBAAvBvI,KAAKiK,eAAxC,IAA2E4B,EAAA,iBAA6B7L,KAAKwK,cAAcwB,IAAI3C,GAC3HrJ,KAAKsK,MAAMjB,GAAf,UAA8BrJ,KAAKqK,YAAY2B,IAAI3C,GAC/CrJ,KAAKsK,MAAMjB,GAAf,QAA4BrJ,KAAKuK,UAAUyB,IAAI3C,GAE/CrJ,KAAA,sBAGJ,eAAc,KACZ,MAAMiM,EAASJ,EAAA,gBAAqB,CAACI,EAAD,KAClCA,EAAA,KAAcnE,QAAQoE,EAAA,GAAtB,YACAD,EAAA,KAAcnE,QAAQoE,EAAA,GAAtB,iBACA,GACC,CAAC,EAJJ,IASA,OAHAL,EAAA,aAAoBA,EAAA,SAAF,QAA0BI,EAAA,KAAcJ,EAAA,SAA1D,OACAA,EAAA,iBAAwBA,EAAD,aAAqBI,EAAA,MAAiBA,EAAA,GAA7D,GAEA,GAEF,WACEjM,KAAA,4BAAkCA,KAAlC,YAEF,eACEA,KAAA,sBAA4BA,KAA5B,gBAEF,aACEA,KAAA,8BAAoCA,KAApC,cAEF,cAAa,KACXA,KAAA,QAAkBA,KAAKgK,aAAe,WAAeX,GAAOrJ,KAAKsK,MAAMjB,GAArD,MAAkE,IAApF,KAEF,uBAAsB,SACpB7I,EAAQR,KAAKgK,aAAexJ,EAAA,IAAU2J,GAAK,eAAqBA,EAAGnK,KAA3D,UAARQ,EACA,MAAM2L,EAAM,IAAZ,GACI,eAAUA,EAAd,KAEAA,EAAA,QAAY9C,GAAO+C,EAAS/C,GAA5B,IACA7I,EAAA,QAAc6I,GAAO+C,EAAS/C,GAA9B,IAEAgD,MAEF,eAAc,EAAwBC,EAAxB,IACZ,MAAMzD,EAAW7I,KAAKsK,MAAMjB,GAA5B,SAEAiD,EAAA,WAEA,IAAK,IAAIpH,EAAT,EAAgBA,EAAI2D,EAApB,OAAqC3D,IACnCoH,EAActM,KAAKuM,eAAe1D,EAApB,GAAdyD,GAGF,UAEF,WAAU,GACR,IAAIb,EAASzL,KAAKsK,MAAMjB,GAAxB,OAEA,MAAMmD,EAAN,GACA,aAAOf,EACLe,EAAA,KAAAf,GACAA,EAASzL,KAAKsK,MAAMmB,GAApBA,OAGF,UAEF,SAAQ,GACN,MAAMpC,EAAM,eAAqBwC,EAAD,KAAY7L,KAA5C,SACAA,KAAA,iBAEAA,KAAA,qBAEF,WAAU,GACR,MAAMqJ,EAAM,eAAqBwC,EAAD,KAAY7L,KAA5C,SACIA,KAAKsK,MAAT,KAAqBtK,KAAKsK,MAAMjB,GAAKuC,MAAQ,OAE/C,SAAQ,GACN,OAAO5L,KAAKsK,MAAMjB,GAAKR,UAAY7I,KAAKsK,MAAMjB,GAAKR,SAAnD,QAEF,aAAY,KACV,IAAK7I,KAAKsK,MAAMqB,eAAhB,GAAqC,OAEhC3L,KAAL,gBACEA,KAAA,oBAAyB2I,IACvB3I,KAAA,qBACAA,KAAA,oBACAA,KAAA,wBAIJ,MAAM6L,EAAO7L,KAAKsK,MAAlB,GACA,IAEA,EAActK,KAAKqK,YAAY2B,IAA/B,GACKhM,KAAKqK,YAAYoC,OAAOpD,GAE7BwC,EAAA,WAEA7L,KAAA,sBAEF,eAAc,KACZ,IAAKA,KAAKsK,MAAMqB,eAAhB,GAAqC,OAErC,MAAMe,EAAU,IAAhB,IAEA,mBAAI1M,KAAKiK,cAAiC,CACxC,MAAMqC,EAAc,CAACjD,KAAQrJ,KAAKuM,eAAlC,IACAD,EAAA,QAAoBK,IAClB3M,KAAA,sBACAA,KAAA,4BACA0M,EAAA,WAGF,MAAMF,EAAUxM,KAAK4M,WAArB,GACAJ,EAAA,QAAgBf,IACdzL,KAAA,SAAqBA,KAAK+L,eAAe/L,KAAKsK,MAAzB,GAAwCtK,KAA7D,OACA0M,EAAA,MAAoB1M,KAAKsK,MAAMmB,GAA/B,mBAGFzL,KAAA,sBACAA,KAAA,4BACA0M,EAAA,SAGF,IAAK,MAAOrD,EAAZ,KAA2BqD,EAA3B,UACE1M,KAAA,oBAE2B,SAAvBA,KAAKiK,eAA4BjK,KAAK6M,SAA1C,MAEA,IAAArM,EAAiBR,KAAKwK,cAAcwB,IAApC,GAA+ChM,KAAKwK,cAAciC,OAAlE,KAGJ,WAAU,KACR,IAAKzM,KAAKsK,MAAMqB,eAAhB,GAAqC,OAErC,MAAME,EAAO7L,KAAKsK,MAAlB,GACMzB,EAAW,eAAqBgD,EAAD,KAAY7L,KAAjD,cAEI6I,IAAaA,EAAb,QAAgCgD,EAAhC,QAA+CA,EAAA,MAAnD,UACEA,EAAA,2BAAgC,IAAM7L,KAAKuL,WAAWlC,EAAtD,IACSR,GAAYA,EAAhB,SACLgD,EAAA,SAEAA,EAAA,OAAc7L,KAAKuK,UAAUyB,IAA7B,GAAwChM,KAAKuK,UAAUkC,OAAvD,GAEAzM,KAAA,sBAGJ,iBAAgB,GACd,MAAM6L,EAAO7L,KAAKsK,MAAlB,GAEIuB,GAAQA,EAAZ,QACEA,EAAA,iBAAwBA,EAAxB,WACAA,EAAA,sBAA6BA,EAA7B,gBACAA,EAAA,eAAsBA,EAAtB,SACAA,EAAA,aAAoBA,EAApB,SAGJ,WAAU,GACR,QAAS7L,KAAF,QAAiBA,KAAK8M,cAAcC,IAA3C,KAIJ,OAAM,GACJ,MAAMlE,EAAuC7I,KAAKoF,MAAMZ,OACpDxE,KAAKoF,MAAMlB,IAAI,gCAAflE,OAEAA,KAAKqL,OAJF,QAMP,OAAOtI,EAAE,MAAO,CACdnC,YADc,aAEdiC,MAAO,CACL,wBAAyB7C,KADpB,UAEL,oBAAqBA,KAFhB,SAGFA,KAAKgN,eALZ,O","file":"js/adsmanager~autorules~proxy~upload.c16ccdbe.js","sourcesContent":["// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VRadioGroup.sass'\n\n// Extensions\nimport VInput from '../VInput'\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { PropType } from 'vue'\n\nconst baseMixins = mixins(\n  Comparable,\n  BaseItemGroup,\n  VInput\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-radio-group',\n\n  provide () {\n    return {\n      radioGroup: this,\n    }\n  },\n\n  props: {\n    column: {\n      type: Boolean,\n      default: true,\n    },\n    height: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    name: String,\n    row: Boolean,\n    // If no value set on VRadio\n    // will match valueComparator\n    // force default to null\n    value: null as unknown as PropType<any>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--radio-group': true,\n        'v-input--radio-group--column': this.column && !this.row,\n        'v-input--radio-group--row': this.row,\n      }\n    },\n  },\n\n  methods: {\n    genDefaultSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-input--radio-group__input',\n        attrs: {\n          id: this.id,\n          role: 'radiogroup',\n          'aria-labelledby': this.computedId,\n        },\n      }, VInput.options.methods.genDefaultSlot.call(this))\n    },\n    genInputSlot () {\n      const render = VInput.options.methods.genInputSlot.call(this)\n\n      delete render.data!.on!.click\n\n      return render\n    },\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return null\n\n      label.data!.attrs!.id = this.computedId\n      // WAI considers this an orphaned label\n      delete label.data!.attrs!.for\n      label.tag = 'legend'\n\n      return label\n    },\n    onClick: BaseItemGroup.options.methods.onClick,\n  },\n})\n","// Styles\nimport './VRadio.sass'\n\n// Components\nimport VRadioGroup from './VRadioGroup'\nimport VLabel from '../VLabel'\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Rippleable from '../../mixins/rippleable'\nimport Themeable from '../../mixins/themeable'\nimport Selectable from '../../mixins/selectable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Colorable,\n  Rippleable,\n  GroupableFactory('radioGroup'),\n  Themeable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  radioGroup: InstanceType<typeof VRadioGroup>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-radio',\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    id: String,\n    label: String,\n    name: String,\n    offIcon: {\n      type: String,\n      default: '$radioOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$radioOn',\n    },\n    readonly: Boolean,\n    value: {\n      default: null,\n    },\n  },\n\n  data: () => ({\n    isFocused: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-radio--is-disabled': this.isDisabled,\n        'v-radio--is-focused': this.isFocused,\n        ...this.themeClasses,\n        ...this.groupClasses,\n      }\n    },\n    computedColor (): string | undefined {\n      return Selectable.options.computed.computedColor.call(this)\n    },\n    computedIcon (): string {\n      return this.isActive\n        ? this.onIcon\n        : this.offIcon\n    },\n    computedId (): string {\n      return VInput.options.computed.computedId.call(this)\n    },\n    hasLabel: VInput.options.computed.hasLabel,\n    hasState (): boolean {\n      return (this.radioGroup || {}).hasState\n    },\n    isDisabled (): boolean {\n      return this.disabled || !!(this.radioGroup || {}).disabled\n    },\n    isReadonly (): boolean {\n      return this.readonly || !!(this.radioGroup || {}).readonly\n    },\n    computedName (): string {\n      if (this.name || !this.radioGroup) {\n        return this.name\n      }\n\n      return this.radioGroup.name || `radio-${this.radioGroup._uid}`\n    },\n    rippleState (): string | undefined {\n      return Selectable.options.computed.rippleState.call(this)\n    },\n    validationState (): string | undefined {\n      return (this.radioGroup || {}).validationState || this.computedColor\n    },\n  },\n\n  methods: {\n    genInput (args: any) {\n      // We can't actually use the mixin directly because\n      // it's made for standalone components, but its\n      // genInput method is exactly what we need\n      return Selectable.options.methods.genInput.call(this, 'radio', args)\n    },\n    genLabel () {\n      if (!this.hasLabel) return null\n\n      return this.$createElement(VLabel, {\n        on: {\n          click: (e: Event) => {\n            // Prevent label from\n            // causing the input\n            // to focus\n            e.preventDefault()\n\n            this.onChange()\n          },\n        },\n        attrs: {\n          for: this.computedId,\n        },\n        props: {\n          color: this.validationState,\n          focused: this.hasState,\n        },\n      }, getSlot(this, 'label') || this.label)\n    },\n    genRadio () {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.radioGroup && this.radioGroup.dense,\n          },\n        }), this.computedIcon),\n        this.genInput({\n          name: this.computedName,\n          value: this.value,\n          ...this.attrs$,\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    onFocus (e: Event) {\n      this.isFocused = true\n      this.$emit('focus', e)\n    },\n    onBlur (e: Event) {\n      this.isFocused = false\n      this.$emit('blur', e)\n    },\n    onChange () {\n      if (this.isDisabled || this.isReadonly || this.isActive) return\n\n      this.toggle()\n    },\n    onKeydown: () => {}, // Override default with noop\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-radio',\n      class: this.classes,\n    } as VNodeData\n\n    return h('div', data, [\n      this.genRadio(),\n      this.genLabel(),\n    ])\n  },\n})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { keyCodes, getObjectValueByPath } from '../../util/helpers'\n\n// Types\nimport { PropType } from 'vue'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | undefined>,\n      default: undefined,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => this.filter(item, String(this.internalSearch), String(this.getText(item))))\n    },\n    internalSearch: {\n      get (): string | undefined {\n        return this.lazySearch\n      },\n      set (val: any) {\n        this.lazySearch = val\n\n        this.$emit('update:search-input', val)\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = undefined\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      if (this.readonly) return\n\n      const index = this.selectedItems.length - 1\n\n      if (this.selectedIndex === -1 && index !== 0) {\n        this.selectedIndex = index\n        return\n      }\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n\n      if (this.getDisabled(currentItem)) return\n\n      const newIndex = this.selectedIndex === index\n        ? this.selectedIndex - 1\n        : this.selectedItems[this.selectedIndex + 1]\n          ? this.selectedIndex\n          : -1\n\n      if (newIndex === -1) {\n        this.setValue(this.multiple ? [] : undefined)\n      } else {\n        this.selectItem(currentItem)\n      }\n\n      this.selectedIndex = newIndex\n    },\n    clearableCallback () {\n      this.internalSearch = undefined\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections () {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (this.isDisabled) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData!.setData('text/plain', currentItemText)\n      event.clipboardData!.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    },\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): string {\n      return getObjectValueByPath(this.item, this.itemDisabled)\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      return getObjectValueByPath(this.item, this.itemChildren)\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected ? this.selectedColor : undefined,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode (): VNode {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.disabled) return\n\n            if (this.openOnClick && this.hasChildren) {\n              this.open()\n            } else if (this.activatable) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any): VNode {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper (): any {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(this.genChild)]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n        'v-treeview-node--excluded': this.treeview.isExcluded(this.key),\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\nimport { TreeviewItemFunction } from 'types'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array as PropType<NodeArray>,\n      default: () => ([]),\n    },\n    dense: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array as PropType<any[]>,\n      default: () => ([]),\n    },\n    multipleActive: Boolean,\n    open: {\n      type: Array as PropType<NodeArray>,\n      default: () => ([]),\n    },\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    selectionType: {\n      type: String as PropType<'leaf' | 'independent'>,\n      default: 'leaf',\n      validator: (v: string) => ['leaf', 'independent'].includes(v),\n    },\n    value: {\n      type: Array as PropType<NodeArray>,\n      default: () => ([]),\n    },\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    this.buildTree(this.items)\n    this.value.forEach(key => this.updateSelected(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n    this.active.forEach(key => this.updateActive(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren, [])\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = !children.length ? node : this.calculateState(node, this.nodes)\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: NodeState, state: Record<string | number, NodeState>) {\n      const counts = node.children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n        return counts\n      }, [0, 0])\n\n      node.isSelected = !!node.children.length && counts[0] === node.children.length\n      node.isIndeterminate = !node.isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return node\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        const descendants = [key, ...this.getDescendants(key)]\n        descendants.forEach(descendant => {\n          this.nodes[descendant].isSelected = isSelected\n          this.nodes[descendant].isIndeterminate = false\n          changed.set(descendant, isSelected)\n        })\n\n        const parents = this.getParents(key)\n        parents.forEach(parent => {\n          this.nodes[parent] = this.calculateState(this.nodes[parent], this.nodes)\n          changed.set(parent, this.nodes[parent].isSelected)\n        })\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.map(VTreeviewNode.options.methods.genChild.bind(this))\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n"],"sourceRoot":""}